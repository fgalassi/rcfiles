set nocompatible
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
" keep 500 lines of command line history
set history=5000
" show the cursor position all the time
set ruler
" display incomplete commands
set showcmd
" always show status line
set laststatus=2
" do incremental searching
set incsearch
" no sound bell, flash screen
set visualbell
" search case insensitive
set ignorecase
" search case insensitive unless first char is upper case
set smartcase 
" indent automatically 
set autoindent
" highlight search
set hlsearch
" show line numbers
set number
" no word wrap
set nowrap 
" wildmode
set wildmode=list:longest,full
" faster esc in visual/insert mode
set ttimeout
set ttimeoutlen=10
" longer mapping waiting time
set timeout
set timeoutlen=3000
" noesckeys <= NO, cursor don't work in insert mode
" text settings
set expandtab
set tabstop=4
set shiftwidth=4
set textwidth=80
" highlight current line
set cursorline
" map leader
let mapleader=','
" enable syntax
syntax on


" backup
" Save your backups to a less annoying place than the current directory.
" If you have .vim-backup in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/tmp/backup or . if all else fails.
if isdirectory($HOME . '/.vim/tmp/backup') == 0
  :silent !mkdir -p ~/.vim/tmp/backup >/dev/null 2>&1
endif
set backupdir=./.vim-backup/,~/.vim/tmp/backup/,.
set backup

" swap
" Save your swp files to a less annoying place than the current directory.
" If you have .vim-swap in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/tmp/swap, ~/tmp or .
if isdirectory($HOME . '/.vim/tmp/swap') == 0
  :silent !mkdir -p ~/.vim/tmp/swap >/dev/null 2>&1
endif
set directory=./.vim-swap//,~/.vim/tmp/swap//,~/tmp//,.
set swapfile

" persistent undo
if exists('+undofile')
  " undofile - This allows you to use undos after exiting and restarting
  " This, like swap and backups, uses .vim-undo first, then ~/.vim/tmp/undo
  " :help undo-persistence
  " This is only present in 7.3+
  if isdirectory($HOME . '/.vim/tmp/undo') == 0
    :silent !mkdir -p ~/.vim/tmp/undo > /dev/null 2>&1
  endif
  set undodir=./.vim-undo//,~/.vim/tmp/undo//
  set undofile
endif

" autocommands
if has('autocmd')
    autocmd Filetype html setlocal ts=4 sts=4 sw=4
    autocmd Filetype ruby setlocal ts=2 sts=2 sw=2
    autocmd Filetype javascript setlocal ts=2 sts=2 sw=2
    autocmd Filetype jade setlocal ts=2 sts=2 sw=2
    autocmd Filetype scheme setlocal ts=2 sts=2 sw=2
endif

" mappings
"
" <C-L> removes highlight
noremap <silent> <C-L> :nohlsearch<cr><C-L>
" simple ad blank line (next)
noremap <leader>o o<esc>k
" simple add blank line (prev)
noremap <leader>O O<esc>j
" vimrc
noremap <Leader>vco :split $MYVIMRC<Cr>
noremap <Leader>vcc :w <Bar> source % <Bar> q<Cr>
noremap <Leader>vce :e $MYVIMRC<Cr>
noremap <Leader>vcs :w <Bar> source $MYVIMRC<Cr>

"
" My gui config
"
if has('gui_running')
  if has('gui_macvim')
      set guifont=Consolas:h16
  else
      set guifont=Consolas\ 12
  endif
  set guioptions-=m
  set guioptions-=T
  set guioptions-=r
endif

" fix terminal problems?
if !has('gui_running')
  set t_RV=
  set t_Co=256 " Explicitly tell vim that the terminal supports 256 colors
endif

" vundle
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#begin()

Plugin 'gmarik/vundle'
Plugin 'matchit.zip'
Plugin 'surround.vim'
Plugin 'The-NERD-Commenter'
Plugin 'tpope/vim-fugitive'
Plugin 'kien/ctrlp.vim'
Plugin 'SirVer/ultisnips'
Plugin 'scrooloose/syntastic'
Plugin 'Tabular'
Plugin 'mileszs/ack.vim'
Plugin 'godlygeek/csapprox'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'bling/vim-airline'
Plugin 'thinca/vim-visualstar'
Plugin 'MarcWeber/vim-addon-local-vimrc'
Plugin 'mihaifm/bufstop'

" text objects
Plugin 'kana/vim-textobj-user'
Plugin 'michaeljsmith/vim-indent-object'
Plugin 'nelstrom/vim-textobj-rubyblock'
Plugin 'vim-scripts/argtextobj.vim'

" javascript
Plugin 'pangloss/vim-javascript'
Plugin 'kchmck/vim-coffee-script'
" ruby
Plugin 'vim-ruby/vim-ruby'
Plugin 'ecomba/vim-ruby-refactoring'
" php
Plugin 'php.vim'
Plugin 'PDV--phpDocumentor-for-Vim'
Plugin 'phpcomplete.vim'
" haml
Plugin 'tpope/vim-haml'
" jade
Plugin 'digitaltoad/vim-jade'
" stylus
Plugin 'wavded/vim-stylus'
" markdown
"Plugin 'suan/vim-instant-markdown'
Plugin 'tpope/vim-markdown'

call vundle#end()
filetype plugin indent on

" color schemes
" colorscheme digerati
colorscheme molokai

" plugins
let g:ctrlp_custom_ignore = '\.git$\|\.hg$\|\.svn$\|.work$\|.keep$'
let g:ctrlp_cmd = 'CtrlPMixed'

map <leader>b :BufstopModeFast<CR>

